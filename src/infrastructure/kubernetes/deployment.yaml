apiVersion: v1
kind: Namespace
metadata:
  name: ev-analysis
  labels:
    name: ev-analysis

---
# ConfigMap for application configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: ev-analysis-config
  namespace: ev-analysis
data:
  DEBUG: "false"
  LOG_LEVEL: "INFO"
  MLFLOW_EXPERIMENT_NAME: "ev_analysis_prod"
  DEFAULT_PAGE_SIZE: "20"
  MAX_PAGE_SIZE: "100"

---
# Secret for sensitive data
apiVersion: v1
kind: Secret
metadata:
  name: ev-analysis-secrets
  namespace: ev-analysis
type: Opaque
data:
  DATABASE_URL: cG9zdGdyZXNxbDovL3VzZXI6cGFzc3dvcmRAcG9zdGdyZXM6NTQzMi9ldl9hbmFseXNpcw==
  SECRET_KEY: eW91ci1zdXBlci1zZWNyZXQta2V5LWNoYW5nZS1pbi1wcm9kdWN0aW9u
  REDIS_URL: cmVkaXM6Ly9yZWRpczozNjM5

---
# PostgreSQL Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: ev-analysis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: ev_analysis
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: postgres
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc

---
# PostgreSQL Service
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: ev-analysis
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432

---
# Redis Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: ev-analysis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"

---
# Redis Service
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: ev-analysis
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379

---
# Backend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ev-analysis-backend
  namespace: ev-analysis
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ev-analysis-backend
  template:
    metadata:
      labels:
        app: ev-analysis-backend
    spec:
      containers:
      - name: backend
        image: yourusername/ev-analysis:latest
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: ev-analysis-secrets
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: ev-analysis-secrets
              key: REDIS_URL
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: ev-analysis-secrets
              key: SECRET_KEY
        envFrom:
        - configMapRef:
            name: ev-analysis-config
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"

---
# Backend Service
apiVersion: v1
kind: Service
metadata:
  name: ev-analysis-backend
  namespace: ev-analysis
spec:
  selector:
    app: ev-analysis-backend
  ports:
  - port: 8000
    targetPort: 8000
  type: LoadBalancer

---
# Frontend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ev-analysis-frontend
  namespace: ev-analysis
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ev-analysis-frontend
  template:
    metadata:
      labels:
        app: ev-analysis-frontend
    spec:
      containers:
      - name: frontend
        image: yourusername/ev-analysis-frontend:latest
        ports:
        - containerPort: 80
        env:
        - name: REACT_APP_API_URL
          value: "http://ev-analysis-backend:8000"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"

---
# Frontend Service
apiVersion: v1
kind: Service
metadata:
  name: ev-analysis-frontend
  namespace: ev-analysis
spec:
  selector:
    app: ev-analysis-frontend
  ports:
  - port: 80
    targetPort: 80
  type: LoadBalancer

---
# Persistent Volume Claim for PostgreSQL
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: ev-analysis
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
# Horizontal Pod Autoscaler for Backend
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ev-analysis-backend-hpa
  namespace: ev-analysis
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ev-analysis-backend
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80